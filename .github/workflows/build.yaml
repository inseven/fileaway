name: build

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  schedule:
    - cron:  '0 9 * * *'
  workflow_dispatch:

jobs:

  appstore-build:

    runs-on: macos-ventura

    steps:

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Install dependencies
      run: scripts/install-dependencies.sh

    - name: Build and test
      env:
        APPLE_DISTRIBUTION_CERTIFICATE_BASE64: ${{ secrets.PERSONAL_APPLE_DISTRIBUTION_CERTIFICATE_BASE64 }}
        APPLE_DISTRIBUTION_CERTIFICATE_PASSWORD: ${{ secrets.PERSONAL_APPLE_DISTRIBUTION_CERTIFICATE_PASSWORD }}
        MACOS_DEVELOPER_INSTALLER_CERTIFICATE: ${{ secrets.PERSONAL_MACOS_DEVELOPER_INSTALLER_CERTIFICATE_BASE64 }}
        MACOS_DEVELOPER_INSTALLER_CERTIFICATE_PASSWORD: ${{ secrets.PERSONAL_MACOS_DEVELOPER_INSTALLER_CERTIFICATE_PASSWORD }}

        APPLE_API_KEY_BASE64: ${{ secrets.PERSONAL_APPLE_API_KEY_BASE64 }}
        APPLE_API_KEY_ISSUER_ID: ${{ secrets.PERSONAL_APPLE_API_KEY_ISSUER_ID }}
        APPLE_API_KEY_ID: ${{ secrets.PERSONAL_APPLE_API_KEY_ID }}

        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RELEASE: ${{ github.ref == 'refs/heads/main' }}

      run: |
        scripts/build.sh

    - name: Archive the binary
      uses: actions/upload-artifact@v4
      with:
        path: build/build-*.zip
        if-no-files-found: error

  website-build:

    runs-on: ubuntu-latest

    steps:

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Checkout required submodules
      run: |
        git submodule update --init --depth 1 scripts/build-tools
        git submodule update --init --depth 1 scripts/changes

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.9"

    - name: Install pipenv
      run: |
        python -m pip install --upgrade pipenv wheel

    - name: Install dependencies
      run: scripts/install-dependencies.sh

    - name: Update release notes
      run: |
        scripts/update-release-notes.sh

    - name: Commit documentation
      uses: stefanzweifel/git-auto-commit-action@v5
      id: auto-commit
      with:
        branch: documentation
        create_branch: true
        push_options: --force
        commit_message: "docs: Update release notes"
